!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("node-fetch"),require("@metamask/eth-sig-util"),require("@ethersproject/bytes"),require("@tharsis/proto"),require("@tharsis/transactions"),require("@hanchon/signature-to-pubkey"),require("@tharsis/address-converter")):"function"==typeof define&&define.amd?define(["exports","node-fetch","@metamask/eth-sig-util","@ethersproject/bytes","@tharsis/proto","@tharsis/transactions","@hanchon/signature-to-pubkey","@tharsis/address-converter"],t):t((e||self).evmosTsWallet={},e.nodeFetch,e.ethSigUtil,e.bytes,e.proto,e.transactions,e.signatureToPubkey,e.addressConverter)}(this,function(e,t,n,r,s,o,i,a){function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=/*#__PURE__*/c(t);const m=function(e){try{return Promise.resolve(e.signMessage("generate_pubkey")).then(function(e){return i.signatureToPubkey(e,Buffer.from([50,215,18,245,169,63,252,16,225,169,71,95,254,165,146,216,40,162,115,78,147,125,80,182,25,69,136,250,65,200,94,178]))})}catch(e){return Promise.reject(e)}},d={chainId:9e3,cosmosChainId:"evmos_9000-1"};e.LOCALNET_CHAIN=d,e.LOCALNET_FEE={amount:"20",denom:"aevmos",gas:"200000"},e.MAINNET_CHAIN={chainId:9001,cosmosChainId:"evmos_9001-2"},e.MAINNET_FEE={amount:"3000000000000000",denom:"aevmos",gas:"150000"},e.TESTNET_CHAIN={chainId:9e3,cosmosChainId:"evmos_9000-4"},e.TESTNET_FEE={amount:"5000",denom:"atevmos",gas:"600000"},e.broadcast=function(e,t="http://127.0.0.1:1317"){try{return Promise.resolve(u.default(`${t}/cosmos/tx/v1beta1/txs`,{method:"post",body:e,headers:{"Content-Type":"application/json"}})).then(function(e){return Promise.resolve(e.json())})}catch(e){return Promise.reject(e)}},e.generatePubkey=m,e.getSender=function(e,t="http://127.0.0.1:1317"){try{const n=a.ethToEvmos(e.address);return Promise.resolve(u.default(`${t}/cosmos/auth/v1beta1/accounts/${n}`)).then(function(t){return Promise.resolve(t.json()).then(function(t){function r(e){return{accountAddress:n,sequence:o,accountNumber:s,pubkey:e}}const s=parseInt(t.account.base_account.account_number,10),o=parseInt(t.account.base_account.sequence,10),i=t.account.base_account.pub_key?.key;return i?r(i):Promise.resolve(m(e)).then(r)})})}catch(e){return Promise.reject(e)}},e.signTransaction=function(e,t,n="BROADCAST_MODE_BLOCK"){try{const o=`0x${Buffer.from(t.signDirect.signBytes,"base64").toString("hex")}`,i=e._signingKey().signDigest(o),a=r.splitSignature(i),c=r.arrayify(r.concat([a.r,a.s])),u=`{ "tx_bytes": [${s.createTxRaw(t.signDirect.body.serializeBinary(),t.signDirect.authInfo.serializeBinary(),[c]).message.serializeBinary().toString()}], "mode": "${n}" }`;return Promise.resolve(u)}catch(e){return Promise.reject(e)}},e.signTransactionUsingEIP712=function(e,t,s,i=d,a="BROADCAST_MODE_BLOCK"){try{const c=r.arrayify(n.TypedDataUtils.eip712Hash(s.eipToSign,n.SignTypedDataVersion.V4)),u=e._signingKey().signDigest(c),m=r.joinSignature(u),d=o.signatureToWeb3Extension(i,{accountAddress:t},m),h=o.createTxRawEIP712(s.legacyAmino.body,s.legacyAmino.authInfo,d);return Promise.resolve(`{ "tx_bytes": [${h.message.serializeBinary().toString()}], "mode": "${a}" }`)}catch(e){return Promise.reject(e)}}});
//# sourceMappingURL=signer.umd.js.map
